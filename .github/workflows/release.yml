name: Release

on:
  push:
    tags: [ '**' ]

jobs:
  release:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install platyPS
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module -Name platyPS -Scope CurrentUser

    - name: Prepare Dependencies
      run: |
        $LOCALPKG = $(Join-Path ${env:TEMP} $(New-Guid))
        mkdir "${LOCALPKG}"
        curl.exe -sSLO --output-dir "${LOCALPKG}" https://github.com/9506hqwy/xdr-net/releases/download/0.4.0/Xdr.0.4.0.nupkg
        curl.exe -sSLO --output-dir "${LOCALPKG}" https://github.com/9506hqwy/libvirt-schema-net/releases/download/11.1.0/LibvirtModel.11.1.0.nupkg
        curl.exe -sSLO --output-dir "${LOCALPKG}" https://github.com/9506hqwy/libvirt-remote-net/releases/download/11.1.0/LibvirtRemote.11.1.0.nupkg
        curl.exe -sSLO --output-dir "${LOCALPKG}" https://github.com/9506hqwy/libvirt-header-net/releases/download/11.1.0/LibvirtHeader.11.1.0.nupkg
        dotnet nuget add source --name local "${LOCALPKG}"

    - name: Create Artifacts
      run: |
        dotnet msbuild release.proj

        dotnet tool install -g docfx
        docfx doc\docfx.json

        $CUR_DIR = $(pwd)
        $REPOSITORY_NAME = ${env:GITHUB_REPOSITORY}.replace("${env:GITHUB_REPOSITORY_OWNER}/", "")
        Compress-Archive -Path '.\doc\_site\*' -DestinationPath "${CUR_DIR}\artifacts\help-${REPOSITORY_NAME}.zip"

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh config set prompt disabled
        gh release create ${env:GITHUB_REF_NAME} .\artifacts\*  -t v${env:GITHUB_REF_NAME} -d
